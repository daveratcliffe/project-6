[{"C:\\Users\\daver\\OneDrive\\Documents\\sites\\juno\\week8\\project-6\\project-6\\src\\index.js":"1","C:\\Users\\daver\\OneDrive\\Documents\\sites\\juno\\week8\\project-6\\project-6\\src\\Search.js":"2","C:\\Users\\daver\\OneDrive\\Documents\\sites\\juno\\week8\\project-6\\project-6\\src\\Haiku.js":"3"},{"size":517,"mtime":1607278452365,"results":"4","hashOfConfig":"5"},{"size":2481,"mtime":1607384679756,"results":"6","hashOfConfig":"5"},{"size":7064,"mtime":1607384679754,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"rrs5r5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\daver\\OneDrive\\Documents\\sites\\juno\\week8\\project-6\\project-6\\src\\index.js",[],["16","17"],"C:\\Users\\daver\\OneDrive\\Documents\\sites\\juno\\week8\\project-6\\project-6\\src\\Search.js",["18"],"import { Component } from \"react\";\r\nimport axios from \"axios\";\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      suggestions: \"\",\r\n    };\r\n  }\r\n  //this function gets suggested words for autocomplete from api\r\n  getSuggestions = (word) => {\r\n    axios({\r\n      url: \"https://api.datamuse.com/sug\",\r\n      responseType: \"json\",\r\n      method: \"GET\",\r\n      params: {\r\n        s: word,\r\n      },\r\n    }).then(({ data }) => {\r\n      //get only first three suggestions\r\n      const suggestions = data.filter((item, index) => {\r\n        if (index < 3) {\r\n          return item;\r\n        }\r\n      });\r\n      //set the suggestions into state\r\n      this.setState({\r\n        suggestions: suggestions,\r\n      });\r\n    });\r\n  };\r\n  //when suggested word is clicked, this function is called. It gets the syllables number of the clicked word\r\n  getWordInfo = (e) => {\r\n    const word = e.target.dataset.name;\r\n    axios({\r\n      url: \"https://api.datamuse.com/words\",\r\n      responseType: \"json\",\r\n      method: \"GET\",\r\n      params: {\r\n        //this param tells api to pull the words that have similar prononcuation to the query. the first result will be the word itself\r\n        sp: word,\r\n        //this param tells api to include the number of syllables in response\r\n        md: \"s\",\r\n      },\r\n    }).then(({ data }) => {\r\n      console.log(data[0]);\r\n      //this function updates the state in app.js with the word that user clicked and the number of syllables in that word\r\n      this.props.updateSearchQuery(data[0]);\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"Search\">\r\n        <form>\r\n          <label className=\"srOnly\" htmlFor=\"search\">\r\n            Input your word\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search\"\r\n            onChange={(e) => {\r\n              this.getSuggestions(e.target.value);\r\n            }}\r\n          />\r\n        </form>\r\n        <ul>\r\n          {/* displays suggested words (if there are any) as lis */}\r\n          {this.state.suggestions &&\r\n            this.state.suggestions.map((word) => {\r\n              return (\r\n                <li\r\n                  key={word.score}\r\n                  onClick={this.getWordInfo}\r\n                  data-name={word.word}\r\n                >\r\n                  {word.word}\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","C:\\Users\\daver\\OneDrive\\Documents\\sites\\juno\\week8\\project-6\\project-6\\src\\Haiku.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":21,"column":53,"nodeType":"25","messageId":"26","endLine":21,"endColumn":55},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]