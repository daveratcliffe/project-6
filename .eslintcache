[{"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Intro.js":"1","D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Compose.js":"2","D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Search.js":"3","D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\App.js":"4","D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Header.js":"5","D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Finish.js":"6","D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Haiku.js":"7"},{"size":2229,"mtime":1607658129595,"results":"8","hashOfConfig":"9"},{"size":8866,"mtime":1607695252537,"results":"10","hashOfConfig":"9"},{"size":4131,"mtime":1607695220504,"results":"11","hashOfConfig":"9"},{"size":5728,"mtime":1607662144673,"results":"12","hashOfConfig":"9"},{"size":486,"mtime":1607658129595,"results":"13","hashOfConfig":"9"},{"size":1465,"mtime":1607662437663,"results":"14","hashOfConfig":"9"},{"size":2892,"mtime":1607658129595,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m1lww4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Intro.js",[],"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Compose.js",[],"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Search.js",[],"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\App.js",["32"],"import { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport Modal from './Modal'\r\nimport Intro from \"./Intro\";\r\nimport Verse from \"./Verse\";\r\nimport Haiku from \"./Haiku\";\r\nimport Logbook from \"./Logbook\";\r\nimport Footer from \"./Footer\";\r\nimport Finish from \"./Finish\";\r\n\r\n\r\n// PSEUDO CODE\r\n// User inputs a first word - we grab that input value\r\n// On change OR on submit: Make an API call to get the number of syllables:\r\n// If the user enters a word that has more than 5 syllables\r\n// Error handling  - if there the word is not a word\r\n// Provide a visual indicator (color)\r\n// setState - word and # of syllables\r\n// Make a second API call within the component, passing the word as a parameter.\r\n// This API call will return a list of words that usually follow that word in the English language\r\n// Filter/other method that array of results to get the words with the correct number of syllables (ie if the user inputs a 2 syllable word, we will give them results with <= 3 syllables)\r\n// Display the results on the page for the user to choose from\r\n// Dave knows whatâ€™s up\r\n// User cycles through the options\r\n// Once the user selects the word, the line is then complete OR we make another API call to get the following word.\r\n// Display message (stretch goal - option to save) when the user has completed their haiku\r\n\r\n//endpoint: https://api.datamuse.com/words\r\n//Params:\r\n//rel_bga = user input = this.state.word\r\n//md = s - this is from the API, it returns the number of syllables for each result\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      verseVisible: 0,\r\n      line1: [],\r\n      line2: [],\r\n      line3: [],\r\n      headerVisible: false,\r\n      modalVisible: false,\r\n      allHaikus: [],\r\n    };\r\n  }\r\n\r\n  //Function to set the state of the line - will be passed as props to the verse\r\n  updateHaiku = (numberOfLine, lineText) => {\r\n    //storing the line number in a variable\r\n    const line = `line${numberOfLine}`;\r\n    this.setState({\r\n      [line]: lineText,\r\n    });\r\n  };\r\n\r\n  //function to change which verse is being/displayed composed on the page\r\n  changeVerseVisible = () => {\r\n    this.setState({\r\n      verseVisible: ++this.state.verseVisible,\r\n    });\r\n    //also show the header, when the verse is visible\r\n    this.setState({\r\n      headerVisible: true,\r\n    });\r\n  };\r\n\r\n  //function to allow the user to move to a previous line, mid composition\r\n  goToPreviousLine = () => {\r\n    const prevVerseVisible = this.state.verseVisible - 1;\r\n    this.setState({\r\n      verseVisible: prevVerseVisible,\r\n    });\r\n  };\r\n\r\n  //function to set the sate of allHaikus - aka populate the array from Firebase\r\n  getHaikus = (array) => {\r\n    this.setState({\r\n      allHaikus: array,\r\n    });\r\n  };\r\n\r\n  //function to Toggle Modal\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalVisible: !this.state.modalVisible\r\n    })\r\n  }\r\n\r\n  //function to clear all lines\r\n  clear = () => {\r\n    this.setState({\r\n      line1: [],\r\n      line2: [],\r\n      line3: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.verseVisible === 0 && (\r\n          <>\r\n            <Intro changeVerseVisible={this.changeVerseVisible} />\r\n          </>\r\n        )}\r\n\r\n        {/* Display only once the user clicks on 'create your own' - which sets the state to true */}\r\n        {this.state.headerVisible \r\n        ? <Header \r\n            modalVisible={this.state.modalVisible}\r\n            toggleModal={this.toggleModal}/> \r\n        : null}\r\n\r\n        {/* Display the modal based on the state */}\r\n        {this.state.modalVisible\r\n        ?   < Modal toggleModal={this.toggleModal}/>\r\n        : null\r\n        }\r\n      \r\n\r\n        <main>\r\n          {this.state.verseVisible === 1 && (\r\n            <Verse\r\n              updateHaiku={this.updateHaiku}\r\n              lineNumber={1}\r\n              line={this.state.line1}\r\n              totalNumSyllables={5}\r\n              changeVerseVisible={this.changeVerseVisible}\r\n            />\r\n          )}\r\n          \r\n          {this.state.verseVisible === 2 && (\r\n            <Verse\r\n              updateHaiku={this.updateHaiku}\r\n              lineNumber={2}\r\n              line={this.state.line2}\r\n              totalNumSyllables={7}\r\n              changeVerseVisible={this.changeVerseVisible}\r\n              goToPreviousLine={this.goToPreviousLine}\r\n            />\r\n          )}\r\n\r\n\r\n          {this.state.verseVisible === 3 && (\r\n            <Verse\r\n              updateHaiku={this.updateHaiku}\r\n              lineNumber={3}\r\n              line={this.state.line3}\r\n              totalNumSyllables={5}\r\n              startAgain={this.startAgain}\r\n              changeVerseVisible={this.changeVerseVisible}\r\n              goToPreviousLine={this.goToPreviousLine}\r\n            />\r\n          )}\r\n\r\n          {this.state.verseVisible < 4 && this.state.verseVisible > 0 && (\r\n            <Haiku\r\n              line1={this.state.line1}\r\n              line2={this.state.line2}\r\n              line3={this.state.line3}\r\n              active={this.state.verseVisible}\r\n            />\r\n          )}\r\n\r\n          {this.state.verseVisible === 4 && (\r\n            <Finish\r\n              line1={this.state.line1}\r\n              line2={this.state.line2}\r\n              line3={this.state.line3}\r\n              clear={this.clear}\r\n            />\r\n          )}\r\n\r\n\r\n          {this.state.verseVisible <= 4 && this.state.verseVisible > 0 && (\r\n            <Logbook\r\n              allHaikus={this.state.allHaikus}\r\n              getHaikus={this.getHaikus}\r\n            />\r\n          )}\r\n        </main>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n",["33","34"],"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Header.js",[],"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Finish.js",[],"D:\\sites\\juno\\bootcamp\\projects\\project-6\\src\\Haiku.js",[],{"ruleId":"35","severity":1,"message":"36","line":60,"column":23,"nodeType":"37","endLine":60,"endColumn":33},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-global-assign","no-unsafe-negation"]